apiVersion: v1
kind: Service
metadata:
  name: certbot
  labels:
    app: certbot
spec:
  ports:
    - port: 80
      protocol: TCP
  type: NodePort
  selector:
    app: certbot
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: certbot-dns-script
binaryData:
  dns-renew.sh: ${DNS_RENEW_SCRIPT}
---
# EFF recommends running `certbot renew` a couple times per day.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: certbot
spec:
  schedule: "32 4,16 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: certbot
        spec:
          restartPolicy: OnFailure
          serviceAccountName: certbot
          imagePullSecrets:
            - name: registry.internal.aleemhaji.com
          containers:
            - name: certbot-renew
              image: registry.internal.aleemhaji.com/certbot:v1.25.0
              command:
                - sh
                - -c
                - -x
                - |
                  certbot renew --no-random-sleep-on-renew --standalone --preferred-challenges http
                  certbot renew --no-random-sleep-on-renew --manual-auth-hook /scripts/dns-renew.sh
              volumeMounts:
                - name: certbot-storage
                  mountPath: /etc/letsencrypt
                - name: certbot-scripts
                  mountPath: /scripts
              env:
                - name: NAMESILO_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: namesilo-api-key
                      key: value
              ports:
                - containerPort: 80
          volumes:
            - name: certbot-storage
              nfs:
                server: 192.168.96.4
                path: /mnt/main/apps/certificates
            - name: certbot-scripts
              configMap:
                name: certbot-dns-script
                defaultMode: 0755
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bare-ingress-external
  annotations:
    kubernetes.io/ingress.class: "nginx-external"
spec:
  tls:
    - hosts:
        - aleemhaji.com
      secretName: tls.aleemhaji.com
  rules:
    - host: aleemhaji.com
      http:
        paths:
          - path: /.well-known/acme-challenge
            pathType: Prefix
            backend:
              service:
                name: certbot
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bare-internal-ingress-external
  annotations:
    kubernetes.io/ingress.class: "nginx-external"
spec:
  tls:
    - hosts:
        - internal.aleemhaji.com
  rules:
    - host: internal.aleemhaji.com
      http:
        paths:
          - path: /.well-known/acme-challenge
            pathType: Prefix
            backend:
              service:
                name: certbot
                port:
                  number: 80
