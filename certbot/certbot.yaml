apiVersion: v1
kind: Service
metadata:
  name: certbot
  labels:
    app: certbot
spec:
  ports:
    - port: 80
      protocol: TCP
  type: NodePort
  selector:
    app: certbot
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: certbot-dns-script
data:
  dns-renew.sh: |
    #!/usr/bin/env sh

    ACTUAL_DOMAIN=_acme-challenge.$CERTBOT_DOMAIN
    SUBDOMAIN=$(echo -n $ACTUAL_DOMAIN | sed 's/.aleemhaji.com//')

    wget -O - "https://www.namesilo.com/api/dnsListRecords?version=1&type=xml&key=$NAMESILO_API_KEY&domain=aleemhaji.com" | \
      sed 's+<resource_record>+\'$'\n+g' | sed 's+</resource_record>+\'$'\n+g' | grep record_id | while read line; do
        NAMESILO_RECORD_ID=$(echo $line | sed -E 's/.*<record_id>([0-9a-f]{32}).*/\1/')
        if echo $line | grep '<type>A</type>' > /dev/null; then
            echo "Skipping A record because there's nothing to do with it"
        elif echo $line | grep '<type>CNAME</type>' > /dev/null; then
            echo "Skipping CNAME update because there's nothing to with it"
        elif echo $line | grep '<type>TXT</type>' > /dev/null; then
            if [ "$ACTUAL_DOMAIN" == "$(echo $line | sed -E 's/.*<host>([^<]*).*/\1/')" ]; then
                echo "Updating domain: $ACTUAL_DOMAIN with '$CERTBOT_VALIDATION'..."
                wget -O - "https://www.namesilo.com/api/dnsUpdateRecord?version=1&type=xml&key=$NAMESILO_API_KEY&domain=aleemhaji.com&rrid=$NAMESILO_RECORD_ID&rrhost=$SUBDOMAIN&rrvalue=$CERTBOT_VALIDATION&rrttl=7207"
                echo "Sleeping for 30 minutes to wait for NameSilo DNS updates to propagate..."
                echo "Sleep is double their DNS update duration to ensure other DNS caches have time to expire."
                sleep 1800
                break
            else
              echo "Skipping TXT records because $ACTUAL_DOMAIN != $(echo $line | sed -E 's/.*<host>([^<]*).*/\1/')"
            fi
        else
            echo "Can't handle record ($line)"
        fi
      done
---
# EFF recommends running `certbot renew` a couple times per day.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: certbot
spec:
  schedule: "32 4,16 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: certbot
        spec:
          restartPolicy: OnFailure
          serviceAccountName: certbot
          imagePullSecrets:
            - name: registry.internal.aleemhaji.com
          containers:
            - name: certbot-renew
              image: registry.internal.aleemhaji.com/certbot:latest
              command:
                - sh
                - -c
                - -x
                - |
                  certbot renew --no-random-sleep-on-renew --standalone --preferred-challenges http
                  certbot renew --no-random-sleep-on-renew --manual-auth-hook /scripts/dns-renew.sh
              volumeMounts:
                - name: certbot-storage
                  mountPath: /etc/letsencrypt
                - name: certbot-scripts
                  mountPath: /scripts
              env:
                - name: NAMESILO_API_KEY 
                  valueFrom:
                    secretKeyRef:
                      name: namesilo-api-key
                      key: value
              ports:
                - containerPort: 80
          volumes:
            - name: certbot-storage
              nfs:
                server: 192.168.96.4
                path: /mnt/main/apps/certificates
            - name: certbot-scripts
              configMap:
                name: certbot-dns-script
                defaultMode: 0755
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: bare-ingress-external
  annotations:
    kubernetes.io/ingress.class: "nginx-external"
spec:
  tls:
    - hosts:
        - aleemhaji.com
  rules:
    - host: aleemhaji.com
      http:
        paths:
          - path: /
            backend:
              serviceName: certbot
              servicePort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: bare-internal-ingress-external
  annotations:
    kubernetes.io/ingress.class: "nginx-external"
spec:
  tls:
    - hosts:
        - internal.aleemhaji.com
  rules:
    - host: internal.aleemhaji.com
      http:
        paths:
          - path: /
            backend:
              serviceName: certbot
              servicePort: 80
