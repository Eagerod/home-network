# There are a ton of environment variables needed to keep different services
#   talking securely to each other.
# Each of the variables needed are documented here, and how they were created
#   or chosen will be shown.
# This is a shell script fragment that is expected to be sourced when the
#   commands requiring these environment variables are run.
# References to source files is provided where possible.


# The docker registry requires some credentials to be set up to allow users to
#   pull and push images.
# These values are pushed to the cluster in several different ways.
#   1. htpasswd file is used to tell the service what credentials exist
#   2. docker pulls performed by the cluster need to be executed using a set of
#      credentials.
#   3. A set of credentials is pushed for local use as well.
# A docker login command should be run on dev machines to get them ready to
#   push images to the container registry.
# This login script is written to $DOCKER_LOGIN_SCRIPT, and can be evaled
#   directly when needed.
export DOCKER_REGISTRY_HOSTNAME=registry.internal.aleemhaji.com
DOCKER_KUBERNETES_USERNAME=kubernetes
DOCKER_KUBERNETES_PASSWORD=$(uuidgen)
DOCKER_CONSUMER_USERNAME=aleem
DOCKER_CONSUMER_PASSWORD=$(uuidgen)

# The following are generated from what's provided above
DOCKER_HTPASSWD_FILE_CONTENTS=$(
	htpasswd -nbB -C 10 $DOCKER_KUBERNETES_USERNAME $DOCKER_KUBERNETES_PASSWORD | sed '/^ *$/d' &&
	htpasswd -nbB -C 10 $DOCKER_CONSUMER_USERNAME $DOCKER_CONSUMER_PASSWORD | sed '/^ *$/d'
)
DOCKER_CONFIG_JSON_CONTENTS="{\"auths\":{\"$DOCKER_REGISTRY_HOSTNAME\":{\"username\":\"$DOCKER_KUBERNETES_USERNAME\",\"password\":\"$DOCKER_KUBERNETES_PASSWORD\",\"auth\":\"$(echo -n $DOCKER_KUBERNETES_USERNAME:$DOCKER_KUBERNETES_PASSWORD | base64)\"}}}"

export DOCKER_HTPASSWD_FILE_CONTENTS_BASE64=$(echo "$DOCKER_HTPASSWD_FILE_CONTENTS" | base64)
export DOCKER_CONFIG_JSON_FILE_CONTENTS_BASE64=$(echo "$DOCKER_CONFIG_JSON_CONTENTS" | base64)

export DOCKER_LOGIN_SCRIPT="docker login $DOCKER_REGISTRY_HOSTNAME --username \$DOCKER_CONSUMER_USERNAME --password \$DOCKER_CONSUMER_PASSWORD"


# Slack configurations include channel IDs that the bot will send messages to,
#   as well as the bot's API key.
SLACK_BOT_API_KEY=xoxb-a-bunch-of-stuff-from-slack
export SLACK_BOT_DEFAULT_CHANNEL=COPIEDFROMCHANNELURL
export SLACK_BOT_ALERTING_CHANNEL=COPIEDFROMCHANNELURL

export SLACK_BOT_API_KEY_BASE64=$(echo -n "$SLACK_BOT_API_KEY" | base64)


# Firefly
export FIREFLY_MYSQL_USER=firefly
export FIREFLY_MYSQL_DATABASE=firefly
FIREFLY_MYSQL_PASSWORD=$(uuidgen)
FIREFLY_APP_KEY=$(openssl rand -hex 16)

export FIREFLY_MYSQL_PASSWORD_BASE64=$(echo -n "$FIREFLY_MYSQL_PASSWORD" | base64)
export FIREFLY_APP_KEY_BASE64=$(echo -n "$FIREFLY_APP_KEY" | base64)


# Guacamole
export GUACAMOLE_MYSQL_USER=guacamole
export GUACAMOLE_MYSQL_DATABASE=guacamole
GUACAMOLE_MYSQL_PASSWORD=$(uuidgen)

export GUACAMOLE_MYSQL_PASSWORD_BASE64=$(echo -n "$GUACAMOLE_MYSQL_PASSWORD" | base64)


# Resilio-Sync
export RESILIO_SERVER_USERNAME=admin
RESILIO_SERVER_PASSWORD=$(uuidgen)

export RESILIO_SYNC_PASSWORD_BASE64=$(echo -n "$RESILIO_SERVER_PASSWORD" | base64)


# Node-RED
export NODE_RED_MYSQL_USER=nodered
export NODE_RED_MYSQL_DATABASE=nodered
NODE_RED_MYSQL_PASSWORD=$(uuidgen)

export NODE_RED_MYSQL_PASSWORD_BASE64=$(echo -n "$NODE_RED_MYSQL_PASSWORD" | base64)


# Postgres
POSTGRES_ROOT_PASSWORD=$(uuidgen)

export POSTGRES_ROOT_PASSWORD_BASE64=$(echo -n "$POSTGRES_ROOT_PASSWORD" | base64)


# MySQL
MYSQL_ROOT_PASSWORD=$(uuidgen)

export MYSQL_ROOT_PASSWORD_BASE64=$(echo -n "$MYSQL_ROOT_PASSWORD" | base64)


# OpenVPN Access Server
export OPENVPN_PRIMARY_USERNAME=aleem
export OPENVPN_AS_HOSTNAME=vpn.aleemhaji.com
OPENVPN_PRIMARY_PASSWORD=$(uuidgen)

export OPENVPN_PRIMARY_PASSWORD_BASE64=$(echo -n "$OPENVPN_PRIMARY_PASSWORD" | base64)
