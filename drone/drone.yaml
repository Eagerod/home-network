apiVersion: v1
kind: ServiceAccount
metadata:
  name: drone
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: drone
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
    verbs:
      - get
      - create
      - delete
      - list
      - watch
      - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: drone
subjects:
  - kind: ServiceAccount
    name: drone
roleRef:
  kind: Role
  name: drone
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-deployment
  labels:
    app: drone
    module: web
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app: drone
      module: web
  template:
    metadata:
      labels:
        app: drone
        module: web
    spec:
      imagePullSecrets:
        - name: registry.internal.aleemhaji.com
      containers:
        - name: drone
          image: registry.internal.aleemhaji.com/drone/drone:2.17.0
          env:
            - name: DRONE_USER_CREATE
              value: username:aleem,admin:true
            - name: DRONE_GITEA_SERVER
              value: https://gitea.internal.aleemhaji.com
            - name: DRONE_GITEA_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: drone-secrets
                  key: gitea_client_id
            - name: DRONE_GITEA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: drone-secrets
                  key: gitea_client_secret
            - name: DRONE_SERVER_HOST
              value: drone.internal.aleemhaji.com
            - name: DRONE_SERVER_PROTO
              value: https
            - name: DRONE_DATABASE_DRIVER
              value: postgres
            - name: DRONE_DATABASE_DATASOURCE
              valueFrom:
                secretKeyRef:
                  name: drone-secrets
                  key: connection_string
            - name: DRONE_RPC_SECRET
              valueFrom:
                secretKeyRef:
                  name: drone-secrets
                  key: rpc_secret
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drone-runner-deployment
  labels:
    app: drone
    module: runner
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app: drone
      module: runner
  template:
    metadata:
      labels:
        app: drone
        module: runner
    spec:
      serviceAccountName: drone
      imagePullSecrets:
        - name: registry.internal.aleemhaji.com
      containers:
        - name: drone
          image: registry.internal.aleemhaji.com/drone/drone-runner-kube:1.0.0-rc.3
          env:
            - name: DRONE_RPC_HOST
              value: drone.internal.aleemhaji.com
            - name: DRONE_RPC_PROTO
              value: https
            - name: DRONE_RPC_SECRET
              valueFrom:
                secretKeyRef:
                  name: drone-secrets
                  key: rpc_secret
---
apiVersion: v1
kind: Service
metadata:
  name: drone
  labels:
    app: drone
    module: web
spec:
  ports:
    - port: 80
      protocol: TCP
  type: NodePort
  selector:
    app: drone
    module: web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drone-ingress-redirect
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/temporal-redirect: https://drone.internal.aleemhaji.com
spec:
  rules:
    - host: drone
    - host: drone.home
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drone-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - drone.internal.aleemhaji.com
      secretName: internal-certificate-files
  rules:
    - host: drone.internal.aleemhaji.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: drone
                port:
                  number: 80
